// <auto-generated />
using System;
using FStore.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FStore.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FStore.Domain.Account.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3aec8f0b-3a6a-4b5d-8a3a-348ae529001a"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1158),
                            CreatedBy = "",
                            Deleted = false,
                            IsActive = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1171),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 11, 137, 135, 187, 238, 32, 130, 23, 76, 29, 254, 230, 27, 77, 138, 74, 180, 231, 23, 2, 118, 217, 84, 126, 206, 155, 163, 255, 8, 217, 3, 117, 243, 17, 11, 13, 26, 196, 24, 83, 2, 30, 189, 145, 225, 186, 60, 84, 179, 254, 250, 112, 82, 179, 9, 0, 41, 89, 197, 126, 81, 182, 121, 235 },
                            PasswordSalt = new byte[] { 27, 96, 241, 29, 68, 206, 225, 147, 200, 67, 182, 119, 145, 101, 44, 92, 18, 186, 121, 73, 190, 234, 136, 41, 61, 215, 229, 159, 253, 31, 72, 4, 138, 140, 55, 158, 70, 109, 103, 63, 35, 14, 188, 114, 110, 121, 246, 32, 64, 58, 202, 157, 144, 33, 151, 136, 149, 164, 235, 188, 197, 45, 154, 68, 212, 138, 224, 161, 31, 182, 118, 115, 55, 172, 113, 57, 94, 134, 218, 250, 174, 225, 198, 149, 199, 114, 219, 104, 21, 159, 219, 10, 15, 245, 148, 173, 6, 214, 245, 184, 192, 58, 129, 73, 142, 132, 12, 38, 204, 230, 109, 53, 7, 176, 129, 190, 253, 136, 108, 217, 30, 247, 131, 77, 242, 70, 2, 91 },
                            Role = 1,
                            Username = "admin@example.com"
                        },
                        new
                        {
                            Id = new Guid("2b25a754-a50e-4468-942c-d65c0bc2c86f"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1189),
                            CreatedBy = "",
                            Deleted = false,
                            IsActive = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1189),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 11, 137, 135, 187, 238, 32, 130, 23, 76, 29, 254, 230, 27, 77, 138, 74, 180, 231, 23, 2, 118, 217, 84, 126, 206, 155, 163, 255, 8, 217, 3, 117, 243, 17, 11, 13, 26, 196, 24, 83, 2, 30, 189, 145, 225, 186, 60, 84, 179, 254, 250, 112, 82, 179, 9, 0, 41, 89, 197, 126, 81, 182, 121, 235 },
                            PasswordSalt = new byte[] { 27, 96, 241, 29, 68, 206, 225, 147, 200, 67, 182, 119, 145, 101, 44, 92, 18, 186, 121, 73, 190, 234, 136, 41, 61, 215, 229, 159, 253, 31, 72, 4, 138, 140, 55, 158, 70, 109, 103, 63, 35, 14, 188, 114, 110, 121, 246, 32, 64, 58, 202, 157, 144, 33, 151, 136, 149, 164, 235, 188, 197, 45, 154, 68, 212, 138, 224, 161, 31, 182, 118, 115, 55, 172, 113, 57, 94, 134, 218, 250, 174, 225, 198, 149, 199, 114, 219, 104, 21, 159, 219, 10, 15, 245, 148, 173, 6, 214, 245, 184, 192, 58, 129, 73, 142, 132, 12, 38, 204, 230, 109, 53, 7, 176, 129, 190, 253, 136, 108, 217, 30, 247, 131, 77, 242, 70, 2, 91 },
                            Role = 0,
                            Username = "customer@example.com"
                        },
                        new
                        {
                            Id = new Guid("db757696-89d6-4f61-84bb-61bc9b87ea05"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1192),
                            CreatedBy = "",
                            Deleted = false,
                            IsActive = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1192),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 11, 137, 135, 187, 238, 32, 130, 23, 76, 29, 254, 230, 27, 77, 138, 74, 180, 231, 23, 2, 118, 217, 84, 126, 206, 155, 163, 255, 8, 217, 3, 117, 243, 17, 11, 13, 26, 196, 24, 83, 2, 30, 189, 145, 225, 186, 60, 84, 179, 254, 250, 112, 82, 179, 9, 0, 41, 89, 197, 126, 81, 182, 121, 235 },
                            PasswordSalt = new byte[] { 27, 96, 241, 29, 68, 206, 225, 147, 200, 67, 182, 119, 145, 101, 44, 92, 18, 186, 121, 73, 190, 234, 136, 41, 61, 215, 229, 159, 253, 31, 72, 4, 138, 140, 55, 158, 70, 109, 103, 63, 35, 14, 188, 114, 110, 121, 246, 32, 64, 58, 202, 157, 144, 33, 151, 136, 149, 164, 235, 188, 197, 45, 154, 68, 212, 138, 224, 161, 31, 182, 118, 115, 55, 172, 113, 57, 94, 134, 218, 250, 174, 225, 198, 149, 199, 114, 219, 104, 21, 159, 219, 10, 15, 245, 148, 173, 6, 214, 245, 184, 192, 58, 129, 73, 142, 132, 12, 38, 204, 230, 109, 53, 7, 176, 129, 190, 253, 136, 108, 217, 30, 247, 131, 77, 242, 70, 2, 91 },
                            Role = 0,
                            Username = "customer2@example.com"
                        },
                        new
                        {
                            Id = new Guid("3141069d-f4f3-475c-8efc-99e1b4c3e627"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1194),
                            CreatedBy = "",
                            Deleted = false,
                            IsActive = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1194),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 11, 137, 135, 187, 238, 32, 130, 23, 76, 29, 254, 230, 27, 77, 138, 74, 180, 231, 23, 2, 118, 217, 84, 126, 206, 155, 163, 255, 8, 217, 3, 117, 243, 17, 11, 13, 26, 196, 24, 83, 2, 30, 189, 145, 225, 186, 60, 84, 179, 254, 250, 112, 82, 179, 9, 0, 41, 89, 197, 126, 81, 182, 121, 235 },
                            PasswordSalt = new byte[] { 27, 96, 241, 29, 68, 206, 225, 147, 200, 67, 182, 119, 145, 101, 44, 92, 18, 186, 121, 73, 190, 234, 136, 41, 61, 215, 229, 159, 253, 31, 72, 4, 138, 140, 55, 158, 70, 109, 103, 63, 35, 14, 188, 114, 110, 121, 246, 32, 64, 58, 202, 157, 144, 33, 151, 136, 149, 164, 235, 188, 197, 45, 154, 68, 212, 138, 224, 161, 31, 182, 118, 115, 55, 172, 113, 57, 94, 134, 218, 250, 174, 225, 198, 149, 199, 114, 219, 104, 21, 159, 219, 10, 15, 245, 148, 173, 6, 214, 245, 184, 192, 58, 129, 73, 142, 132, 12, 38, 204, 230, 109, 53, 7, 176, 129, 190, 253, 136, 108, 217, 30, 247, 131, 77, 242, 70, 2, 91 },
                            Role = 2,
                            Username = "employee@example.com"
                        },
                        new
                        {
                            Id = new Guid("a3339dd7-94b9-4f12-9d18-2ee341b4f35c"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1196),
                            CreatedBy = "",
                            Deleted = false,
                            IsActive = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1196),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 11, 137, 135, 187, 238, 32, 130, 23, 76, 29, 254, 230, 27, 77, 138, 74, 180, 231, 23, 2, 118, 217, 84, 126, 206, 155, 163, 255, 8, 217, 3, 117, 243, 17, 11, 13, 26, 196, 24, 83, 2, 30, 189, 145, 225, 186, 60, 84, 179, 254, 250, 112, 82, 179, 9, 0, 41, 89, 197, 126, 81, 182, 121, 235 },
                            PasswordSalt = new byte[] { 27, 96, 241, 29, 68, 206, 225, 147, 200, 67, 182, 119, 145, 101, 44, 92, 18, 186, 121, 73, 190, 234, 136, 41, 61, 215, 229, 159, 253, 31, 72, 4, 138, 140, 55, 158, 70, 109, 103, 63, 35, 14, 188, 114, 110, 121, 246, 32, 64, 58, 202, 157, 144, 33, 151, 136, 149, 164, 235, 188, 197, 45, 154, 68, 212, 138, 224, 161, 31, 182, 118, 115, 55, 172, 113, 57, 94, 134, 218, 250, 174, 225, 198, 149, 199, 114, 219, 104, 21, 159, 219, 10, 15, 245, 148, 173, 6, 214, 245, 184, 192, 58, 129, 73, 142, 132, 12, 38, 204, 230, 109, 53, 7, 176, 129, 190, 253, 136, 108, 217, 30, 247, 131, 77, 242, 70, 2, 91 },
                            Role = 0,
                            Username = "nguyenvanminh@example.com"
                        },
                        new
                        {
                            Id = new Guid("6060ab5a-ca8b-409c-87b2-363a69f06e66"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1198),
                            CreatedBy = "",
                            Deleted = false,
                            IsActive = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1199),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 11, 137, 135, 187, 238, 32, 130, 23, 76, 29, 254, 230, 27, 77, 138, 74, 180, 231, 23, 2, 118, 217, 84, 126, 206, 155, 163, 255, 8, 217, 3, 117, 243, 17, 11, 13, 26, 196, 24, 83, 2, 30, 189, 145, 225, 186, 60, 84, 179, 254, 250, 112, 82, 179, 9, 0, 41, 89, 197, 126, 81, 182, 121, 235 },
                            PasswordSalt = new byte[] { 27, 96, 241, 29, 68, 206, 225, 147, 200, 67, 182, 119, 145, 101, 44, 92, 18, 186, 121, 73, 190, 234, 136, 41, 61, 215, 229, 159, 253, 31, 72, 4, 138, 140, 55, 158, 70, 109, 103, 63, 35, 14, 188, 114, 110, 121, 246, 32, 64, 58, 202, 157, 144, 33, 151, 136, 149, 164, 235, 188, 197, 45, 154, 68, 212, 138, 224, 161, 31, 182, 118, 115, 55, 172, 113, 57, 94, 134, 218, 250, 174, 225, 198, 149, 199, 114, 219, 104, 21, 159, 219, 10, 15, 245, 148, 173, 6, 214, 245, 184, 192, 58, 129, 73, 142, 132, 12, 38, 204, 230, 109, 53, 7, 176, 129, 190, 253, 136, 108, 217, 30, 247, 131, 77, 242, 70, 2, 91 },
                            Role = 0,
                            Username = "lethimai@example.com"
                        },
                        new
                        {
                            Id = new Guid("0e5c838e-f387-4183-a1c1-4c1e802ab180"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1200),
                            CreatedBy = "",
                            Deleted = false,
                            IsActive = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1201),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 11, 137, 135, 187, 238, 32, 130, 23, 76, 29, 254, 230, 27, 77, 138, 74, 180, 231, 23, 2, 118, 217, 84, 126, 206, 155, 163, 255, 8, 217, 3, 117, 243, 17, 11, 13, 26, 196, 24, 83, 2, 30, 189, 145, 225, 186, 60, 84, 179, 254, 250, 112, 82, 179, 9, 0, 41, 89, 197, 126, 81, 182, 121, 235 },
                            PasswordSalt = new byte[] { 27, 96, 241, 29, 68, 206, 225, 147, 200, 67, 182, 119, 145, 101, 44, 92, 18, 186, 121, 73, 190, 234, 136, 41, 61, 215, 229, 159, 253, 31, 72, 4, 138, 140, 55, 158, 70, 109, 103, 63, 35, 14, 188, 114, 110, 121, 246, 32, 64, 58, 202, 157, 144, 33, 151, 136, 149, 164, 235, 188, 197, 45, 154, 68, 212, 138, 224, 161, 31, 182, 118, 115, 55, 172, 113, 57, 94, 134, 218, 250, 174, 225, 198, 149, 199, 114, 219, 104, 21, 159, 219, 10, 15, 245, 148, 173, 6, 214, 245, 184, 192, 58, 129, 73, 142, 132, 12, 38, 204, 230, 109, 53, 7, 176, 129, 190, 253, 136, 108, 217, 30, 247, 131, 77, 242, 70, 2, 91 },
                            Role = 0,
                            Username = "tranlan@example.com"
                        },
                        new
                        {
                            Id = new Guid("ae4c4f03-aa8a-4f37-a7cb-c5bc06e08d74"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1203),
                            CreatedBy = "",
                            Deleted = false,
                            IsActive = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1204),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 11, 137, 135, 187, 238, 32, 130, 23, 76, 29, 254, 230, 27, 77, 138, 74, 180, 231, 23, 2, 118, 217, 84, 126, 206, 155, 163, 255, 8, 217, 3, 117, 243, 17, 11, 13, 26, 196, 24, 83, 2, 30, 189, 145, 225, 186, 60, 84, 179, 254, 250, 112, 82, 179, 9, 0, 41, 89, 197, 126, 81, 182, 121, 235 },
                            PasswordSalt = new byte[] { 27, 96, 241, 29, 68, 206, 225, 147, 200, 67, 182, 119, 145, 101, 44, 92, 18, 186, 121, 73, 190, 234, 136, 41, 61, 215, 229, 159, 253, 31, 72, 4, 138, 140, 55, 158, 70, 109, 103, 63, 35, 14, 188, 114, 110, 121, 246, 32, 64, 58, 202, 157, 144, 33, 151, 136, 149, 164, 235, 188, 197, 45, 154, 68, 212, 138, 224, 161, 31, 182, 118, 115, 55, 172, 113, 57, 94, 134, 218, 250, 174, 225, 198, 149, 199, 114, 219, 104, 21, 159, 219, 10, 15, 245, 148, 173, 6, 214, 245, 184, 192, 58, 129, 73, 142, 132, 12, 38, 204, 230, 109, 53, 7, 176, 129, 190, 253, 136, 108, 217, 30, 247, 131, 77, 242, 70, 2, 91 },
                            Role = 0,
                            Username = "nguyenan@example.com"
                        },
                        new
                        {
                            Id = new Guid("463d52ee-4c4e-40b0-a8f3-e59086878964"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1206),
                            CreatedBy = "",
                            Deleted = false,
                            IsActive = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1206),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 11, 137, 135, 187, 238, 32, 130, 23, 76, 29, 254, 230, 27, 77, 138, 74, 180, 231, 23, 2, 118, 217, 84, 126, 206, 155, 163, 255, 8, 217, 3, 117, 243, 17, 11, 13, 26, 196, 24, 83, 2, 30, 189, 145, 225, 186, 60, 84, 179, 254, 250, 112, 82, 179, 9, 0, 41, 89, 197, 126, 81, 182, 121, 235 },
                            PasswordSalt = new byte[] { 27, 96, 241, 29, 68, 206, 225, 147, 200, 67, 182, 119, 145, 101, 44, 92, 18, 186, 121, 73, 190, 234, 136, 41, 61, 215, 229, 159, 253, 31, 72, 4, 138, 140, 55, 158, 70, 109, 103, 63, 35, 14, 188, 114, 110, 121, 246, 32, 64, 58, 202, 157, 144, 33, 151, 136, 149, 164, 235, 188, 197, 45, 154, 68, 212, 138, 224, 161, 31, 182, 118, 115, 55, 172, 113, 57, 94, 134, 218, 250, 174, 225, 198, 149, 199, 114, 219, 104, 21, 159, 219, 10, 15, 245, 148, 173, 6, 214, 245, 184, 192, 58, 129, 73, 142, 132, 12, 38, 204, 230, 109, 53, 7, 176, 129, 190, 253, 136, 108, 217, 30, 247, 131, 77, 242, 70, 2, 91 },
                            Role = 0,
                            Username = "phantuyet@example.com"
                        },
                        new
                        {
                            Id = new Guid("80cd99a5-f3e4-43f6-a725-f4e07fa7cd7d"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1208),
                            CreatedBy = "",
                            Deleted = false,
                            IsActive = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1208),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 11, 137, 135, 187, 238, 32, 130, 23, 76, 29, 254, 230, 27, 77, 138, 74, 180, 231, 23, 2, 118, 217, 84, 126, 206, 155, 163, 255, 8, 217, 3, 117, 243, 17, 11, 13, 26, 196, 24, 83, 2, 30, 189, 145, 225, 186, 60, 84, 179, 254, 250, 112, 82, 179, 9, 0, 41, 89, 197, 126, 81, 182, 121, 235 },
                            PasswordSalt = new byte[] { 27, 96, 241, 29, 68, 206, 225, 147, 200, 67, 182, 119, 145, 101, 44, 92, 18, 186, 121, 73, 190, 234, 136, 41, 61, 215, 229, 159, 253, 31, 72, 4, 138, 140, 55, 158, 70, 109, 103, 63, 35, 14, 188, 114, 110, 121, 246, 32, 64, 58, 202, 157, 144, 33, 151, 136, 149, 164, 235, 188, 197, 45, 154, 68, 212, 138, 224, 161, 31, 182, 118, 115, 55, 172, 113, 57, 94, 134, 218, 250, 174, 225, 198, 149, 199, 114, 219, 104, 21, 159, 219, 10, 15, 245, 148, 173, 6, 214, 245, 184, 192, 58, 129, 73, 142, 132, 12, 38, 204, 230, 109, 53, 7, 176, 129, 190, 253, 136, 108, 217, 30, 247, 131, 77, 242, 70, 2, 91 },
                            Role = 0,
                            Username = "vuvankhai@example.com"
                        },
                        new
                        {
                            Id = new Guid("c36aab76-f6cc-46f6-a6c3-730d54b61a48"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1210),
                            CreatedBy = "",
                            Deleted = false,
                            IsActive = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1210),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 11, 137, 135, 187, 238, 32, 130, 23, 76, 29, 254, 230, 27, 77, 138, 74, 180, 231, 23, 2, 118, 217, 84, 126, 206, 155, 163, 255, 8, 217, 3, 117, 243, 17, 11, 13, 26, 196, 24, 83, 2, 30, 189, 145, 225, 186, 60, 84, 179, 254, 250, 112, 82, 179, 9, 0, 41, 89, 197, 126, 81, 182, 121, 235 },
                            PasswordSalt = new byte[] { 27, 96, 241, 29, 68, 206, 225, 147, 200, 67, 182, 119, 145, 101, 44, 92, 18, 186, 121, 73, 190, 234, 136, 41, 61, 215, 229, 159, 253, 31, 72, 4, 138, 140, 55, 158, 70, 109, 103, 63, 35, 14, 188, 114, 110, 121, 246, 32, 64, 58, 202, 157, 144, 33, 151, 136, 149, 164, 235, 188, 197, 45, 154, 68, 212, 138, 224, 161, 31, 182, 118, 115, 55, 172, 113, 57, 94, 134, 218, 250, 174, 225, 198, 149, 199, 114, 219, 104, 21, 159, 219, 10, 15, 245, 148, 173, 6, 214, 245, 184, 192, 58, 129, 73, 142, 132, 12, 38, 204, 230, 109, 53, 7, 176, 129, 190, 253, 136, 108, 217, 30, 247, 131, 77, 242, 70, 2, 91 },
                            Role = 0,
                            Username = "lehoanganh@example.com"
                        },
                        new
                        {
                            Id = new Guid("4b45812f-2f47-41b9-b913-39bed1b02c1d"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1212),
                            CreatedBy = "",
                            Deleted = false,
                            IsActive = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1213),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 11, 137, 135, 187, 238, 32, 130, 23, 76, 29, 254, 230, 27, 77, 138, 74, 180, 231, 23, 2, 118, 217, 84, 126, 206, 155, 163, 255, 8, 217, 3, 117, 243, 17, 11, 13, 26, 196, 24, 83, 2, 30, 189, 145, 225, 186, 60, 84, 179, 254, 250, 112, 82, 179, 9, 0, 41, 89, 197, 126, 81, 182, 121, 235 },
                            PasswordSalt = new byte[] { 27, 96, 241, 29, 68, 206, 225, 147, 200, 67, 182, 119, 145, 101, 44, 92, 18, 186, 121, 73, 190, 234, 136, 41, 61, 215, 229, 159, 253, 31, 72, 4, 138, 140, 55, 158, 70, 109, 103, 63, 35, 14, 188, 114, 110, 121, 246, 32, 64, 58, 202, 157, 144, 33, 151, 136, 149, 164, 235, 188, 197, 45, 154, 68, 212, 138, 224, 161, 31, 182, 118, 115, 55, 172, 113, 57, 94, 134, 218, 250, 174, 225, 198, 149, 199, 114, 219, 104, 21, 159, 219, 10, 15, 245, 148, 173, 6, 214, 245, 184, 192, 58, 129, 73, 142, 132, 12, 38, 204, 230, 109, 53, 7, 176, 129, 190, 253, 136, 108, 217, 30, 247, 131, 77, 242, 70, 2, 91 },
                            Role = 0,
                            Username = "tranle@example.com"
                        },
                        new
                        {
                            Id = new Guid("3a9477da-b75c-4ef6-9bf6-a93aa5ffaf6f"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1214),
                            CreatedBy = "",
                            Deleted = false,
                            IsActive = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1215),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 11, 137, 135, 187, 238, 32, 130, 23, 76, 29, 254, 230, 27, 77, 138, 74, 180, 231, 23, 2, 118, 217, 84, 126, 206, 155, 163, 255, 8, 217, 3, 117, 243, 17, 11, 13, 26, 196, 24, 83, 2, 30, 189, 145, 225, 186, 60, 84, 179, 254, 250, 112, 82, 179, 9, 0, 41, 89, 197, 126, 81, 182, 121, 235 },
                            PasswordSalt = new byte[] { 27, 96, 241, 29, 68, 206, 225, 147, 200, 67, 182, 119, 145, 101, 44, 92, 18, 186, 121, 73, 190, 234, 136, 41, 61, 215, 229, 159, 253, 31, 72, 4, 138, 140, 55, 158, 70, 109, 103, 63, 35, 14, 188, 114, 110, 121, 246, 32, 64, 58, 202, 157, 144, 33, 151, 136, 149, 164, 235, 188, 197, 45, 154, 68, 212, 138, 224, 161, 31, 182, 118, 115, 55, 172, 113, 57, 94, 134, 218, 250, 174, 225, 198, 149, 199, 114, 219, 104, 21, 159, 219, 10, 15, 245, 148, 173, 6, 214, 245, 184, 192, 58, 129, 73, 142, 132, 12, 38, 204, 230, 109, 53, 7, 176, 129, 190, 253, 136, 108, 217, 30, 247, 131, 77, 242, 70, 2, 91 },
                            Role = 0,
                            Username = "hoangmai@example.com"
                        },
                        new
                        {
                            Id = new Guid("d15fcb08-fcb1-4a55-b012-b2be211ed2c1"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1216),
                            CreatedBy = "",
                            Deleted = false,
                            IsActive = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1217),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 11, 137, 135, 187, 238, 32, 130, 23, 76, 29, 254, 230, 27, 77, 138, 74, 180, 231, 23, 2, 118, 217, 84, 126, 206, 155, 163, 255, 8, 217, 3, 117, 243, 17, 11, 13, 26, 196, 24, 83, 2, 30, 189, 145, 225, 186, 60, 84, 179, 254, 250, 112, 82, 179, 9, 0, 41, 89, 197, 126, 81, 182, 121, 235 },
                            PasswordSalt = new byte[] { 27, 96, 241, 29, 68, 206, 225, 147, 200, 67, 182, 119, 145, 101, 44, 92, 18, 186, 121, 73, 190, 234, 136, 41, 61, 215, 229, 159, 253, 31, 72, 4, 138, 140, 55, 158, 70, 109, 103, 63, 35, 14, 188, 114, 110, 121, 246, 32, 64, 58, 202, 157, 144, 33, 151, 136, 149, 164, 235, 188, 197, 45, 154, 68, 212, 138, 224, 161, 31, 182, 118, 115, 55, 172, 113, 57, 94, 134, 218, 250, 174, 225, 198, 149, 199, 114, 219, 104, 21, 159, 219, 10, 15, 245, 148, 173, 6, 214, 245, 184, 192, 58, 129, 73, 142, 132, 12, 38, 204, 230, 109, 53, 7, 176, 129, 190, 253, 136, 108, 217, 30, 247, 131, 77, 242, 70, 2, 91 },
                            Role = 0,
                            Username = "lehoa@example.com"
                        });
                });

            modelBuilder.Entity("FStore.Domain.Account.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6b40d359-e7ca-469b-bc7a-cce7d2618a35"),
                            AccountId = new Guid("3aec8f0b-3a6a-4b5d-8a3a-348ae529001a"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1486),
                            CreatedBy = "",
                            DeliveryAddress = "125 Đường Cầu Giấy ,Cầu Giấy, Hà Nội",
                            Email = "johnadmin@example.com",
                            IsMain = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1486),
                            ModifiedBy = "",
                            Name = "John Admin",
                            PhoneNumber = "1234567891"
                        },
                        new
                        {
                            Id = new Guid("530b7ec7-bdea-4c94-b276-ccf9c802a86a"),
                            AccountId = new Guid("2b25a754-a50e-4468-942c-d65c0bc2c86f"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1525),
                            CreatedBy = "",
                            DeliveryAddress = "25 Phình Hồ, Văn Chấn, Yên Bái",
                            Email = "dangnhung72@gmail.com",
                            IsMain = false,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1525),
                            ModifiedBy = "",
                            Name = "Đăng Thị Hồng Nhung",
                            PhoneNumber = "0366702305"
                        },
                        new
                        {
                            Id = new Guid("62ce08ec-7e5c-4361-985e-7bba8d52b450"),
                            AccountId = new Guid("2b25a754-a50e-4468-942c-d65c0bc2c86f"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1528),
                            CreatedBy = "",
                            DeliveryAddress = "22 Ngã Ba Kim, Mù Cang Chải, Yên Bái",
                            Email = "q170302@email.com",
                            IsMain = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1528),
                            ModifiedBy = "",
                            Name = "Nguyễn Quang Hưng",
                            PhoneNumber = "0344917302"
                        },
                        new
                        {
                            Id = new Guid("6e5c7c13-caf4-46ff-9f82-2071b79b287e"),
                            AccountId = new Guid("db757696-89d6-4f61-84bb-61bc9b87ea05"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1531),
                            CreatedBy = "",
                            DeliveryAddress = "15 Lê Văn Lương, Thanh Xuân, Hà Nội",
                            Email = "nguyenvana@example.com",
                            IsMain = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1532),
                            ModifiedBy = "",
                            Name = "Nguyễn Văn An",
                            PhoneNumber = "0912345678"
                        },
                        new
                        {
                            Id = new Guid("06364e7c-b515-4250-b938-aaaa3725d3ef"),
                            AccountId = new Guid("db757696-89d6-4f61-84bb-61bc9b87ea05"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1534),
                            CreatedBy = "",
                            DeliveryAddress = "20 Nguyễn Trãi, Thanh Xuân, Hà Nội",
                            Email = "lethib@example.com",
                            IsMain = false,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1535),
                            ModifiedBy = "",
                            Name = "Lê Thị Bích",
                            PhoneNumber = "0923456789"
                        },
                        new
                        {
                            Id = new Guid("a80ee5b0-0313-402c-a6cf-6279a5961bec"),
                            AccountId = new Guid("db757696-89d6-4f61-84bb-61bc9b87ea05"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1538),
                            CreatedBy = "",
                            DeliveryAddress = "88 Đường Giải Phóng, Hoàng Mai, Hà Nội",
                            Email = "phamvanc@example.com",
                            IsMain = false,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1538),
                            ModifiedBy = "",
                            Name = "Phạm Văn Công",
                            PhoneNumber = "0934567890"
                        },
                        new
                        {
                            Id = new Guid("75196899-735c-4927-ab78-ebba7c3db8ad"),
                            AccountId = new Guid("3141069d-f4f3-475c-8efc-99e1b4c3e627"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1541),
                            CreatedBy = "",
                            DeliveryAddress = "121 Đường Cầu Giấy ,Cầu Giấy, Hà Nội",
                            Email = "johnemployee@example.com",
                            IsMain = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1541),
                            ModifiedBy = "",
                            Name = "John Employee",
                            PhoneNumber = "1234567892"
                        },
                        new
                        {
                            Id = new Guid("4f7bbe86-ea63-4d2d-8750-077b6d827492"),
                            AccountId = new Guid("a3339dd7-94b9-4f12-9d18-2ee341b4f35c"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1553),
                            CreatedBy = "",
                            DeliveryAddress = "456 Đường Nguyễn Trãi, Phường Bến Thành, Quận 1, TP. Hồ Chí Minh",
                            Email = "minhnguyen@example.com",
                            IsMain = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1553),
                            ModifiedBy = "",
                            Name = "Nguyễn Văn Minh",
                            PhoneNumber = "0987654321"
                        },
                        new
                        {
                            Id = new Guid("b18504c6-3241-4a6a-97cf-6346cf6c9edb"),
                            AccountId = new Guid("6060ab5a-ca8b-409c-87b2-363a69f06e66"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1556),
                            CreatedBy = "",
                            DeliveryAddress = "789 Đường Lê Văn Sỹ, Phường 13, Quận 3, TP. Hồ Chí Minh",
                            Email = "lethimai@example.com",
                            IsMain = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1557),
                            ModifiedBy = "",
                            Name = "Lê Thị Mai",
                            PhoneNumber = "0912345679"
                        },
                        new
                        {
                            Id = new Guid("94c8828b-f127-4333-9583-4f5fa8bfd44a"),
                            AccountId = new Guid("0e5c838e-f387-4183-a1c1-4c1e802ab180"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1560),
                            CreatedBy = "",
                            DeliveryAddress = "123 Đường Lê Lai, Phường Phú Hòa, TP. Thủ Dầu Một, Bình Dương",
                            Email = "tranlan@example.com",
                            IsMain = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1560),
                            ModifiedBy = "",
                            Name = "Trần Thị Lan",
                            PhoneNumber = "0908765432"
                        },
                        new
                        {
                            Id = new Guid("5e093047-7818-4679-a6c9-65fc6561bdfe"),
                            AccountId = new Guid("ae4c4f03-aa8a-4f37-a7cb-c5bc06e08d74"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1564),
                            CreatedBy = "",
                            DeliveryAddress = "456 Đường Nguyễn Thái Học, Phường 10, TP. Cần Thơ",
                            Email = "nguyenan@example.com",
                            IsMain = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1564),
                            ModifiedBy = "",
                            Name = "Nguyễn Thị An",
                            PhoneNumber = "0976543210"
                        },
                        new
                        {
                            Id = new Guid("6ec2f29b-ab86-4256-a08d-794aaae5be47"),
                            AccountId = new Guid("463d52ee-4c4e-40b0-a8f3-e59086878964"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1567),
                            CreatedBy = "",
                            DeliveryAddress = "789 Đường Võ Văn Tần, Phường 5, Quận 3, TP. Hồ Chí Minh",
                            Email = "phantuyet@example.com",
                            IsMain = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1567),
                            ModifiedBy = "",
                            Name = "Phan Thị Tuyết",
                            PhoneNumber = "0901234567"
                        },
                        new
                        {
                            Id = new Guid("427ca40d-0d1c-489e-a8e4-839c05187d2e"),
                            AccountId = new Guid("80cd99a5-f3e4-43f6-a725-f4e07fa7cd7d"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1570),
                            CreatedBy = "",
                            DeliveryAddress = "123 Đường Trường Chinh, Phường 14, Quận Tân Bình, TP. Hồ Chí Minh",
                            Email = "vuvankhai@example.com",
                            IsMain = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1570),
                            ModifiedBy = "",
                            Name = "Vũ Văn Khải",
                            PhoneNumber = "0912345678"
                        },
                        new
                        {
                            Id = new Guid("91bc5e8a-a67f-4457-8d11-49165e3ac66d"),
                            AccountId = new Guid("c36aab76-f6cc-46f6-a6c3-730d54b61a48"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1573),
                            CreatedBy = "",
                            DeliveryAddress = "234 Đường Hà Huy Tập, Phường Đông Vệ, TP. Thanh Hóa",
                            Email = "lehoanganh@example.com",
                            IsMain = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1574),
                            ModifiedBy = "",
                            Name = "Lê Hoàng Anh",
                            PhoneNumber = "0923456789"
                        },
                        new
                        {
                            Id = new Guid("de51300c-2954-40b7-ba23-e68681301c85"),
                            AccountId = new Guid("4b45812f-2f47-41b9-b913-39bed1b02c1d"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1576),
                            CreatedBy = "",
                            DeliveryAddress = "123 Đường Nguyễn Văn Linh, Phường Tân Hưng, Quận 7, TP. Hồ Chí Minh",
                            Email = "tranle@example.com",
                            IsMain = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1577),
                            ModifiedBy = "",
                            Name = "Trần Thị Lệ",
                            PhoneNumber = "0987654321"
                        },
                        new
                        {
                            Id = new Guid("bc86cbb0-80c8-4686-8155-52e955f0e91c"),
                            AccountId = new Guid("3a9477da-b75c-4ef6-9bf6-a93aa5ffaf6f"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1583),
                            CreatedBy = "",
                            DeliveryAddress = "456 Đường Phan Chu Trinh, Phường 5, TP. Đà Nẵng",
                            Email = "hoangmai@example.com",
                            IsMain = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1583),
                            ModifiedBy = "",
                            Name = "Hoàng Thị Mai",
                            PhoneNumber = "0976543210"
                        },
                        new
                        {
                            Id = new Guid("3fc9ca55-0fad-4255-b3b2-6aee979ac786"),
                            AccountId = new Guid("d15fcb08-fcb1-4a55-b012-b2be211ed2c1"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1586),
                            CreatedBy = "",
                            DeliveryAddress = "789 Đường Lý Thường Kiệt, Phường Bắc Lý, TP. Quảng Bình",
                            Email = "lehoa@example.com",
                            IsMain = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1586),
                            ModifiedBy = "",
                            Name = "Lê Thị Hòa",
                            PhoneNumber = "0934567890"
                        });
                });

            modelBuilder.Entity("FStore.Domain.Basket.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("FStore.Domain.Basket.CartItem", b =>
                {
                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("CartId", "ProductId", "ProductTypeId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("FStore.Domain.Catalog.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a186203e-0d11-4c22-a45e-58ecfeed368f"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1880),
                            CreatedBy = "",
                            Deleted = false,
                            IsActive = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1880),
                            ModifiedBy = "",
                            Slug = "books",
                            Title = "Books"
                        },
                        new
                        {
                            Id = new Guid("2c8eb836-090b-4a18-a869-620d7f527180"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1882),
                            CreatedBy = "",
                            Deleted = false,
                            IsActive = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1883),
                            ModifiedBy = "",
                            Slug = "movies",
                            Title = "Movies"
                        },
                        new
                        {
                            Id = new Guid("c236f9f6-2c4c-4ba3-99ed-9cf81ee9bf46"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1884),
                            CreatedBy = "",
                            Deleted = false,
                            IsActive = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1885),
                            ModifiedBy = "",
                            Slug = "video-games",
                            Title = "Video Games"
                        });
                });

            modelBuilder.Entity("FStore.Domain.Catalog.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("318f6a20-3c0b-40ca-9cf0-9533e83d3734"),
                            CategoryId = new Guid("a186203e-0d11-4c22-a45e-58ecfeed368f"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1911),
                            CreatedBy = "",
                            Deleted = false,
                            Description = "The Hitchhiker's Guide to the Galaxy is a comedy science fiction franchise created by Douglas Adams. Originally a 1978 radio comedy broadcast on BBC Radio 4, it was later adapted to other formats, including novels, stage shows, comic books, a 1981 TV series, a 1984 text adventure game, and 2005 feature film.",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/en/b/bd/H2G2_UK_front_cover.jpg",
                            IsActive = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1911),
                            ModifiedBy = "",
                            Slug = "the-hitchhikers-guide-to-the-galaxy",
                            Title = "The Hitchhiker's Guide to the Galaxy"
                        },
                        new
                        {
                            Id = new Guid("ce50c69d-5897-4e3d-8d2d-081114ed1fb0"),
                            CategoryId = new Guid("a186203e-0d11-4c22-a45e-58ecfeed368f"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1914),
                            CreatedBy = "",
                            Deleted = false,
                            Description = "Ready Player One is a 2011 science fiction novel, and the debut novel of American author Ernest Cline. The story, set in a dystopia in 2045, follows protagonist Wade Watts on his search for an Easter egg in a worldwide virtual reality game, the discovery of which would lead him to inherit the game creator's fortune. Cline sold the rights to publish the novel in June 2010, in a bidding war to the Crown Publishing Group (a division of Random House). The book was published on August 16, 2011. An audiobook was released the same day; it was narrated by Wil Wheaton, who was mentioned briefly in one of the chapters. In 2012, the book received an Alex Award from the Young Adult Library Services Association division of the American Library Association and won the 2011 Prometheus Award. A film adaptation, screenwritten by Cline and Zak Penn and directed by Steven Spielberg, was released on March 29, 2018. A sequel novel, Ready Player Two, was released on November 24, 2020, to a widely negative critical reception.",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/en/a/a4/Ready_Player_One_cover.jpg",
                            IsActive = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1915),
                            ModifiedBy = "",
                            Slug = "ready-player-one",
                            Title = "Ready Player One"
                        },
                        new
                        {
                            Id = new Guid("c7537965-c2cb-4e77-bfc5-6c466c9a3bea"),
                            CategoryId = new Guid("a186203e-0d11-4c22-a45e-58ecfeed368f"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1918),
                            CreatedBy = "",
                            Deleted = false,
                            Description = "Nineteen Eighty-Four (also published as 1984) is a dystopian novel and cautionary tale by English writer George Orwell. It was published on 8 June 1949 by Secker & Warburg as Orwell's ninth and final book completed in his lifetime. Thematically, it centres on the consequences of totalitarianism, mass surveillance and repressive regimentation of people and behaviours within society. Orwell, a democratic socialist, modelled the authoritarian state in the novel on the Soviet Union in the era of Stalinism, and Nazi Germany. More broadly, the novel examines the role of truth and facts within societies and the ways in which they can be manipulated.",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/en/5/51/1984_first_edition_cover.jpg",
                            IsActive = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1919),
                            ModifiedBy = "",
                            Slug = "nineteen-eighty-four",
                            Title = "Nineteen Eighty-Four"
                        },
                        new
                        {
                            Id = new Guid("4f5c260c-0870-4940-a394-b20c56b3fcca"),
                            CategoryId = new Guid("2c8eb836-090b-4a18-a869-620d7f527180"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1923),
                            CreatedBy = "",
                            Deleted = false,
                            Description = "The Matrix is a 1999 science fiction action film written and directed by the Wachowskis, and produced by Joel Silver. Starring Keanu Reeves, Laurence Fishburne, Carrie-Anne Moss, Hugo Weaving, and Joe Pantoliano, and as the first installment in the Matrix franchise, it depicts a dystopian future in which humanity is unknowingly trapped inside a simulated reality, the Matrix, which intelligent machines have created to distract humans while using their bodies as an energy source. When computer programmer Thomas Anderson, under the hacker alias \"Neo\", uncovers the truth, he \"is drawn into a rebellion against the machines\" along with other people who have been freed from the Matrix.",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/en/c/c1/The_Matrix_Poster.jpg",
                            IsActive = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1923),
                            ModifiedBy = "",
                            Slug = "the-matrix",
                            Title = "The Matrix"
                        },
                        new
                        {
                            Id = new Guid("f2b7ac53-e3e5-4f7c-8094-99530bbde9eb"),
                            CategoryId = new Guid("2c8eb836-090b-4a18-a869-620d7f527180"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1928),
                            CreatedBy = "",
                            Deleted = false,
                            Description = "Back to the Future is a 1985 American science fiction film directed by Robert Zemeckis. Written by Zemeckis and Bob Gale, it stars Michael J. Fox, Christopher Lloyd, Lea Thompson, Crispin Glover, and Thomas F. Wilson. Set in 1985, the story follows Marty McFly (Fox), a teenager accidentally sent back to 1955 in a time-traveling DeLorean automobile built by his eccentric scientist friend Doctor Emmett \"Doc\" Brown (Lloyd). Trapped in the past, Marty inadvertently prevents his future parents' meeting—threatening his very existence—and is forced to reconcile the pair and somehow get back to the future.",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/en/d/d2/Back_to_the_Future.jpg",
                            IsActive = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1929),
                            ModifiedBy = "",
                            Slug = "back-to-the-future",
                            Title = "Back to the Future"
                        },
                        new
                        {
                            Id = new Guid("321ec52d-5fb6-4b1b-bb35-6f73cf92396d"),
                            CategoryId = new Guid("2c8eb836-090b-4a18-a869-620d7f527180"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1932),
                            CreatedBy = "",
                            Deleted = false,
                            Description = "Toy Story is a 1995 American computer-animated comedy film produced by Pixar Animation Studios and released by Walt Disney Pictures. The first installment in the Toy Story franchise, it was the first entirely computer-animated feature film, as well as the first feature film from Pixar. The film was directed by John Lasseter (in his feature directorial debut), and written by Joss Whedon, Andrew Stanton, Joel Cohen, and Alec Sokolow from a story by Lasseter, Stanton, Pete Docter, and Joe Ranft. The film features music by Randy Newman, was produced by Bonnie Arnold and Ralph Guggenheim, and was executive-produced by Steve Jobs and Edwin Catmull. The film features the voices of Tom Hanks, Tim Allen, Don Rickles, Wallace Shawn, John Ratzenberger, Jim Varney, Annie Potts, R. Lee Ermey, John Morris, Laurie Metcalf, and Erik von Detten. Taking place in a world where anthropomorphic toys come to life when humans are not present, the plot focuses on the relationship between an old-fashioned pull-string cowboy doll named Woody and an astronaut action figure, Buzz Lightyear, as they evolve from rivals competing for the affections of their owner, Andy Davis, to friends who work together to be reunited with Andy after being separated from him.",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/en/1/13/Toy_Story.jpg",
                            IsActive = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1933),
                            ModifiedBy = "",
                            Slug = "toy-story",
                            Title = "Toy Story"
                        },
                        new
                        {
                            Id = new Guid("106e97ab-bbce-44b8-95c4-a287752d8561"),
                            CategoryId = new Guid("c236f9f6-2c4c-4ba3-99ed-9cf81ee9bf46"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1937),
                            CreatedBy = "",
                            Deleted = false,
                            Description = "Half-Life 2 is a 2004 first-person shooter game developed and published by Valve. Like the original Half-Life, it combines shooting, puzzles, and storytelling, and adds features such as vehicles and physics-based gameplay.",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/en/2/25/Half-Life_2_cover.jpg",
                            IsActive = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1937),
                            ModifiedBy = "",
                            Slug = "half-life-2",
                            Title = "Half-Life 2"
                        },
                        new
                        {
                            Id = new Guid("07acf5bd-e13d-4667-ba8e-70be6785f655"),
                            CategoryId = new Guid("c236f9f6-2c4c-4ba3-99ed-9cf81ee9bf46"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1941),
                            CreatedBy = "",
                            Deleted = false,
                            Description = "Diablo II is an action role-playing hack-and-slash computer video game developed by Blizzard North and published by Blizzard Entertainment in 2000 for Microsoft Windows, Classic Mac OS, and macOS.",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/en/d/d5/Diablo_II_Coverart.png",
                            IsActive = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1941),
                            ModifiedBy = "",
                            Slug = "diablo-ii",
                            Title = "Diablo II"
                        },
                        new
                        {
                            Id = new Guid("00cab8fd-ad0e-433b-8bb0-2c9596809b7b"),
                            CategoryId = new Guid("c236f9f6-2c4c-4ba3-99ed-9cf81ee9bf46"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1946),
                            CreatedBy = "",
                            Deleted = false,
                            Description = "Day of the Tentacle, also known as Maniac Mansion II: Day of the Tentacle, is a 1993 graphic adventure game developed and published by LucasArts. It is the sequel to the 1987 game Maniac Mansion.",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/en/7/79/Day_of_the_Tentacle_artwork.jpg",
                            IsActive = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1946),
                            ModifiedBy = "",
                            Slug = "day-of-the-tentacle",
                            Title = "Day of the Tentacle"
                        },
                        new
                        {
                            Id = new Guid("fc67ff65-d124-4350-94fa-8dd1cc0559e1"),
                            CategoryId = new Guid("c236f9f6-2c4c-4ba3-99ed-9cf81ee9bf46"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1950),
                            CreatedBy = "",
                            Deleted = false,
                            Description = "The Xbox is a home video game console and the first installment in the Xbox series of video game consoles manufactured by Microsoft.",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/4/43/Xbox-console.jpg",
                            IsActive = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1951),
                            ModifiedBy = "",
                            Slug = "xbox",
                            Title = "Xbox"
                        },
                        new
                        {
                            Id = new Guid("aed54a62-e6e7-4670-ab24-1c84b911deb0"),
                            CategoryId = new Guid("c236f9f6-2c4c-4ba3-99ed-9cf81ee9bf46"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1954),
                            CreatedBy = "",
                            Deleted = false,
                            Description = "The Super Nintendo Entertainment System (SNES), also known as the Super NES or Super Nintendo, is a 16-bit home video game console developed by Nintendo that was released in 1990 in Japan and South Korea.",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/e/ee/Nintendo-Super-Famicom-Set-FL.jpg",
                            IsActive = true,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1955),
                            ModifiedBy = "",
                            Slug = "super-nintendo-entertainment-system",
                            Title = "Super Nintendo Entertainment System"
                        });
                });

            modelBuilder.Entity("FStore.Domain.Catalog.ProductAttribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ProductAttributes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bd2d16dc-10a9-40b1-b76a-e39f3c015086"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1823),
                            CreatedBy = "",
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1823),
                            ModifiedBy = "",
                            Name = "Author"
                        },
                        new
                        {
                            Id = new Guid("09ec0726-d537-4c92-aaaf-760f19c6999f"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1825),
                            CreatedBy = "",
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1826),
                            ModifiedBy = "",
                            Name = "Publisher"
                        },
                        new
                        {
                            Id = new Guid("d369dc76-92cf-417a-aea5-17616c87d4ce"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1827),
                            CreatedBy = "",
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1828),
                            ModifiedBy = "",
                            Name = "ISBN"
                        },
                        new
                        {
                            Id = new Guid("50b7176f-4b13-484b-aec4-edf9383b9232"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1829),
                            CreatedBy = "",
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1830),
                            ModifiedBy = "",
                            Name = "Pages"
                        },
                        new
                        {
                            Id = new Guid("b96ab5d0-3155-4688-8fb4-c6427e0661d5"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1831),
                            CreatedBy = "",
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1831),
                            ModifiedBy = "",
                            Name = "Directors"
                        },
                        new
                        {
                            Id = new Guid("99bf3d94-a248-46f8-bbcb-0f9ae07ce1af"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1833),
                            CreatedBy = "",
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1833),
                            ModifiedBy = "",
                            Name = "Writers"
                        },
                        new
                        {
                            Id = new Guid("a5913406-23e7-4451-a19c-242c974e312e"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1835),
                            CreatedBy = "",
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1835),
                            ModifiedBy = "",
                            Name = "Stars"
                        },
                        new
                        {
                            Id = new Guid("c84ec2fc-651b-42e1-b073-022596ac90c0"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1837),
                            CreatedBy = "",
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1837),
                            ModifiedBy = "",
                            Name = "Gerne"
                        },
                        new
                        {
                            Id = new Guid("4150124b-2a58-4d98-8abe-f380e99a6fa9"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1839),
                            CreatedBy = "",
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1839),
                            ModifiedBy = "",
                            Name = "Developer"
                        });
                });

            modelBuilder.Entity("FStore.Domain.Catalog.ProductType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e21526c4-f78b-4eb5-8ae0-919633179582"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1756),
                            CreatedBy = "",
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1756),
                            ModifiedBy = "",
                            Name = "Default"
                        },
                        new
                        {
                            Id = new Guid("ff58b31e-53d5-4216-84a4-0566cb2e9b52"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1760),
                            CreatedBy = "",
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1760),
                            ModifiedBy = "",
                            Name = "Paperback"
                        },
                        new
                        {
                            Id = new Guid("b28481c3-51fb-4a94-8558-0ac0ebfb1607"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1763),
                            CreatedBy = "",
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1763),
                            ModifiedBy = "",
                            Name = "E-Book"
                        },
                        new
                        {
                            Id = new Guid("43a56b31-2f02-4e9d-88b0-2b3ced2276ba"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1765),
                            CreatedBy = "",
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1765),
                            ModifiedBy = "",
                            Name = "Audiobook"
                        },
                        new
                        {
                            Id = new Guid("dfd52a60-8ccf-4ac2-980c-14ddf41e9a18"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1767),
                            CreatedBy = "",
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1767),
                            ModifiedBy = "",
                            Name = "Stream"
                        },
                        new
                        {
                            Id = new Guid("fbaeaba4-a5bc-487e-b0e5-0967ff543d5d"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1769),
                            CreatedBy = "",
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1769),
                            ModifiedBy = "",
                            Name = "Blu-ray"
                        },
                        new
                        {
                            Id = new Guid("7c604dd7-d603-4f6a-b5bf-f254bd812787"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1771),
                            CreatedBy = "",
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1771),
                            ModifiedBy = "",
                            Name = "VHS"
                        },
                        new
                        {
                            Id = new Guid("e2d9219f-c57b-4c59-bea0-6a3af2e655a5"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1773),
                            CreatedBy = "",
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1773),
                            ModifiedBy = "",
                            Name = "PC"
                        },
                        new
                        {
                            Id = new Guid("f728c3bf-b4d8-41f6-93ab-7a91cba390be"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1775),
                            CreatedBy = "",
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1775),
                            ModifiedBy = "",
                            Name = "PlayStation"
                        },
                        new
                        {
                            Id = new Guid("934902b5-c2a2-4fbc-97c2-8887ed45d08e"),
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1776),
                            CreatedBy = "",
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(1777),
                            ModifiedBy = "",
                            Name = "Xbox"
                        });
                });

            modelBuilder.Entity("FStore.Domain.Catalog.ProductValue", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductAttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProductId", "ProductAttributeId");

                    b.HasIndex("ProductAttributeId");

                    b.ToTable("ProductValues");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("318f6a20-3c0b-40ca-9cf0-9533e83d3734"),
                            ProductAttributeId = new Guid("bd2d16dc-10a9-40b1-b76a-e39f3c015086"),
                            Value = "Douglas Adams"
                        },
                        new
                        {
                            ProductId = new Guid("318f6a20-3c0b-40ca-9cf0-9533e83d3734"),
                            ProductAttributeId = new Guid("09ec0726-d537-4c92-aaaf-760f19c6999f"),
                            Value = "Random House Worlds; Reissue edition (June 23, 1997)"
                        },
                        new
                        {
                            ProductId = new Guid("318f6a20-3c0b-40ca-9cf0-9533e83d3734"),
                            ProductAttributeId = new Guid("d369dc76-92cf-417a-aea5-17616c87d4ce"),
                            Value = "978-0345418913"
                        },
                        new
                        {
                            ProductId = new Guid("318f6a20-3c0b-40ca-9cf0-9533e83d3734"),
                            ProductAttributeId = new Guid("50b7176f-4b13-484b-aec4-edf9383b9232"),
                            Value = "208 pages"
                        },
                        new
                        {
                            ProductId = new Guid("ce50c69d-5897-4e3d-8d2d-081114ed1fb0"),
                            ProductAttributeId = new Guid("bd2d16dc-10a9-40b1-b76a-e39f3c015086"),
                            Value = "Ernest Cline"
                        },
                        new
                        {
                            ProductId = new Guid("ce50c69d-5897-4e3d-8d2d-081114ed1fb0"),
                            ProductAttributeId = new Guid("09ec0726-d537-4c92-aaaf-760f19c6999f"),
                            Value = "Random House Publishing Group; 32089th edition (June 5, 2012)"
                        },
                        new
                        {
                            ProductId = new Guid("ce50c69d-5897-4e3d-8d2d-081114ed1fb0"),
                            ProductAttributeId = new Guid("d369dc76-92cf-417a-aea5-17616c87d4ce"),
                            Value = "978-0307887443"
                        },
                        new
                        {
                            ProductId = new Guid("ce50c69d-5897-4e3d-8d2d-081114ed1fb0"),
                            ProductAttributeId = new Guid("50b7176f-4b13-484b-aec4-edf9383b9232"),
                            Value = "384 pages"
                        },
                        new
                        {
                            ProductId = new Guid("c7537965-c2cb-4e77-bfc5-6c466c9a3bea"),
                            ProductAttributeId = new Guid("bd2d16dc-10a9-40b1-b76a-e39f3c015086"),
                            Value = "George Orwell"
                        },
                        new
                        {
                            ProductId = new Guid("c7537965-c2cb-4e77-bfc5-6c466c9a3bea"),
                            ProductAttributeId = new Guid("09ec0726-d537-4c92-aaaf-760f19c6999f"),
                            Value = "Hawk Press (May 12, 1994)"
                        },
                        new
                        {
                            ProductId = new Guid("c7537965-c2cb-4e77-bfc5-6c466c9a3bea"),
                            ProductAttributeId = new Guid("d369dc76-92cf-417a-aea5-17616c87d4ce"),
                            Value = "978-9388318563"
                        },
                        new
                        {
                            ProductId = new Guid("c7537965-c2cb-4e77-bfc5-6c466c9a3bea"),
                            ProductAttributeId = new Guid("50b7176f-4b13-484b-aec4-edf9383b9232"),
                            Value = "242 pages"
                        },
                        new
                        {
                            ProductId = new Guid("4f5c260c-0870-4940-a394-b20c56b3fcca"),
                            ProductAttributeId = new Guid("b96ab5d0-3155-4688-8fb4-c6427e0661d5"),
                            Value = "Lana Wachowski, Lilly Wachowski"
                        },
                        new
                        {
                            ProductId = new Guid("4f5c260c-0870-4940-a394-b20c56b3fcca"),
                            ProductAttributeId = new Guid("99bf3d94-a248-46f8-bbcb-0f9ae07ce1af"),
                            Value = "Lana Wachowski, Lilly Wachowski"
                        },
                        new
                        {
                            ProductId = new Guid("4f5c260c-0870-4940-a394-b20c56b3fcca"),
                            ProductAttributeId = new Guid("a5913406-23e7-4451-a19c-242c974e312e"),
                            Value = "Keanu Reeves, Laurence Fishburne, Carrie-Anne Moss"
                        },
                        new
                        {
                            ProductId = new Guid("f2b7ac53-e3e5-4f7c-8094-99530bbde9eb"),
                            ProductAttributeId = new Guid("b96ab5d0-3155-4688-8fb4-c6427e0661d5"),
                            Value = "Robert Zemeckis"
                        },
                        new
                        {
                            ProductId = new Guid("f2b7ac53-e3e5-4f7c-8094-99530bbde9eb"),
                            ProductAttributeId = new Guid("99bf3d94-a248-46f8-bbcb-0f9ae07ce1af"),
                            Value = "Robert Zemeckis, Bob Gale"
                        },
                        new
                        {
                            ProductId = new Guid("f2b7ac53-e3e5-4f7c-8094-99530bbde9eb"),
                            ProductAttributeId = new Guid("a5913406-23e7-4451-a19c-242c974e312e"),
                            Value = "Michael J. Fox, Christopher Lloyd, Lea Thompson"
                        },
                        new
                        {
                            ProductId = new Guid("321ec52d-5fb6-4b1b-bb35-6f73cf92396d"),
                            ProductAttributeId = new Guid("b96ab5d0-3155-4688-8fb4-c6427e0661d5"),
                            Value = "John Lasseter"
                        },
                        new
                        {
                            ProductId = new Guid("321ec52d-5fb6-4b1b-bb35-6f73cf92396d"),
                            ProductAttributeId = new Guid("99bf3d94-a248-46f8-bbcb-0f9ae07ce1af"),
                            Value = "John Lasseter, Pete Docter, Andrew Stanton"
                        },
                        new
                        {
                            ProductId = new Guid("321ec52d-5fb6-4b1b-bb35-6f73cf92396d"),
                            ProductAttributeId = new Guid("a5913406-23e7-4451-a19c-242c974e312e"),
                            Value = "Tom Hanks, Tim Allen, Don Rickles"
                        },
                        new
                        {
                            ProductId = new Guid("106e97ab-bbce-44b8-95c4-a287752d8561"),
                            ProductAttributeId = new Guid("c84ec2fc-651b-42e1-b073-022596ac90c0"),
                            Value = "Action"
                        },
                        new
                        {
                            ProductId = new Guid("106e97ab-bbce-44b8-95c4-a287752d8561"),
                            ProductAttributeId = new Guid("4150124b-2a58-4d98-8abe-f380e99a6fa9"),
                            Value = "Valve"
                        },
                        new
                        {
                            ProductId = new Guid("106e97ab-bbce-44b8-95c4-a287752d8561"),
                            ProductAttributeId = new Guid("09ec0726-d537-4c92-aaaf-760f19c6999f"),
                            Value = "Valve"
                        },
                        new
                        {
                            ProductId = new Guid("07acf5bd-e13d-4667-ba8e-70be6785f655"),
                            ProductAttributeId = new Guid("c84ec2fc-651b-42e1-b073-022596ac90c0"),
                            Value = "Action, Role-playing"
                        },
                        new
                        {
                            ProductId = new Guid("07acf5bd-e13d-4667-ba8e-70be6785f655"),
                            ProductAttributeId = new Guid("4150124b-2a58-4d98-8abe-f380e99a6fa9"),
                            Value = "Blizzard North"
                        },
                        new
                        {
                            ProductId = new Guid("07acf5bd-e13d-4667-ba8e-70be6785f655"),
                            ProductAttributeId = new Guid("09ec0726-d537-4c92-aaaf-760f19c6999f"),
                            Value = "Blizzard Entertainment"
                        },
                        new
                        {
                            ProductId = new Guid("00cab8fd-ad0e-433b-8bb0-2c9596809b7b"),
                            ProductAttributeId = new Guid("c84ec2fc-651b-42e1-b073-022596ac90c0"),
                            Value = "Graphic Adventure"
                        },
                        new
                        {
                            ProductId = new Guid("00cab8fd-ad0e-433b-8bb0-2c9596809b7b"),
                            ProductAttributeId = new Guid("4150124b-2a58-4d98-8abe-f380e99a6fa9"),
                            Value = "LucasArts"
                        },
                        new
                        {
                            ProductId = new Guid("00cab8fd-ad0e-433b-8bb0-2c9596809b7b"),
                            ProductAttributeId = new Guid("09ec0726-d537-4c92-aaaf-760f19c6999f"),
                            Value = "LucasArts"
                        });
                });

            modelBuilder.Entity("FStore.Domain.Catalog.ProductVariant", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "ProductTypeId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("ProductVariants");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("318f6a20-3c0b-40ca-9cf0-9533e83d3734"),
                            ProductTypeId = new Guid("ff58b31e-53d5-4216-84a4-0566cb2e9b52"),
                            OriginalPrice = 19.99m,
                            Price = 9.99m,
                            Quantity = 1000
                        },
                        new
                        {
                            ProductId = new Guid("318f6a20-3c0b-40ca-9cf0-9533e83d3734"),
                            ProductTypeId = new Guid("b28481c3-51fb-4a94-8558-0ac0ebfb1607"),
                            OriginalPrice = 0m,
                            Price = 7.99m,
                            Quantity = 1000
                        },
                        new
                        {
                            ProductId = new Guid("318f6a20-3c0b-40ca-9cf0-9533e83d3734"),
                            ProductTypeId = new Guid("43a56b31-2f02-4e9d-88b0-2b3ced2276ba"),
                            OriginalPrice = 29.9m,
                            Price = 19.99m,
                            Quantity = 1000
                        },
                        new
                        {
                            ProductId = new Guid("ce50c69d-5897-4e3d-8d2d-081114ed1fb0"),
                            ProductTypeId = new Guid("ff58b31e-53d5-4216-84a4-0566cb2e9b52"),
                            OriginalPrice = 14.99m,
                            Price = 7.99m,
                            Quantity = 1000
                        },
                        new
                        {
                            ProductId = new Guid("c7537965-c2cb-4e77-bfc5-6c466c9a3bea"),
                            ProductTypeId = new Guid("ff58b31e-53d5-4216-84a4-0566cb2e9b52"),
                            OriginalPrice = 0m,
                            Price = 6.99m,
                            Quantity = 1000
                        },
                        new
                        {
                            ProductId = new Guid("4f5c260c-0870-4940-a394-b20c56b3fcca"),
                            ProductTypeId = new Guid("dfd52a60-8ccf-4ac2-980c-14ddf41e9a18"),
                            OriginalPrice = 0m,
                            Price = 3.99m,
                            Quantity = 1000
                        },
                        new
                        {
                            ProductId = new Guid("4f5c260c-0870-4940-a394-b20c56b3fcca"),
                            ProductTypeId = new Guid("fbaeaba4-a5bc-487e-b0e5-0967ff543d5d"),
                            OriginalPrice = 0m,
                            Price = 9.99m,
                            Quantity = 1000
                        },
                        new
                        {
                            ProductId = new Guid("4f5c260c-0870-4940-a394-b20c56b3fcca"),
                            ProductTypeId = new Guid("7c604dd7-d603-4f6a-b5bf-f254bd812787"),
                            OriginalPrice = 0m,
                            Price = 19.99m,
                            Quantity = 1000
                        },
                        new
                        {
                            ProductId = new Guid("f2b7ac53-e3e5-4f7c-8094-99530bbde9eb"),
                            ProductTypeId = new Guid("dfd52a60-8ccf-4ac2-980c-14ddf41e9a18"),
                            OriginalPrice = 0m,
                            Price = 3.99m,
                            Quantity = 1000
                        },
                        new
                        {
                            ProductId = new Guid("321ec52d-5fb6-4b1b-bb35-6f73cf92396d"),
                            ProductTypeId = new Guid("dfd52a60-8ccf-4ac2-980c-14ddf41e9a18"),
                            OriginalPrice = 0m,
                            Price = 2.99m,
                            Quantity = 1000
                        },
                        new
                        {
                            ProductId = new Guid("106e97ab-bbce-44b8-95c4-a287752d8561"),
                            ProductTypeId = new Guid("e2d9219f-c57b-4c59-bea0-6a3af2e655a5"),
                            OriginalPrice = 29.99m,
                            Price = 19.99m,
                            Quantity = 1000
                        },
                        new
                        {
                            ProductId = new Guid("106e97ab-bbce-44b8-95c4-a287752d8561"),
                            ProductTypeId = new Guid("f728c3bf-b4d8-41f6-93ab-7a91cba390be"),
                            OriginalPrice = 0m,
                            Price = 6.99m,
                            Quantity = 1000
                        },
                        new
                        {
                            ProductId = new Guid("106e97ab-bbce-44b8-95c4-a287752d8561"),
                            ProductTypeId = new Guid("934902b5-c2a2-4fbc-97c2-8887ed45d08e"),
                            OriginalPrice = 5.99m,
                            Price = 4.99m,
                            Quantity = 1000
                        },
                        new
                        {
                            ProductId = new Guid("07acf5bd-e13d-4667-ba8e-70be6785f655"),
                            ProductTypeId = new Guid("e2d9219f-c57b-4c59-bea0-6a3af2e655a5"),
                            OriginalPrice = 24.99m,
                            Price = 9.99m,
                            Quantity = 1000
                        },
                        new
                        {
                            ProductId = new Guid("00cab8fd-ad0e-433b-8bb0-2c9596809b7b"),
                            ProductTypeId = new Guid("e2d9219f-c57b-4c59-bea0-6a3af2e655a5"),
                            OriginalPrice = 0m,
                            Price = 14.99m,
                            Quantity = 1000
                        },
                        new
                        {
                            ProductId = new Guid("fc67ff65-d124-4350-94fa-8dd1cc0559e1"),
                            ProductTypeId = new Guid("e21526c4-f78b-4eb5-8ae0-919633179582"),
                            OriginalPrice = 299.99m,
                            Price = 159.99m,
                            Quantity = 1000
                        },
                        new
                        {
                            ProductId = new Guid("aed54a62-e6e7-4670-ab24-1c84b911deb0"),
                            ProductTypeId = new Guid("e21526c4-f78b-4eb5-8ae0-919633179582"),
                            OriginalPrice = 139.99m,
                            Price = 79.99m,
                            Quantity = 1000
                        });
                });

            modelBuilder.Entity("FStore.Domain.Ordering.Coupon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDiscountPercent")
                        .HasColumnType("bit");

                    b.Property<decimal>("MaxDiscountValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinOrderCondition")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Coupons");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e0111a25-6b27-4f71-b5c1-3ad5b9999a8c"),
                            Code = "SUMMER24",
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(2223),
                            CreatedBy = "",
                            DiscountValue = 24.00m,
                            EndDate = new DateTime(2025, 4, 10, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(2229),
                            IsActive = true,
                            IsDiscountPercent = true,
                            MaxDiscountValue = 80000m,
                            MinOrderCondition = 200000m,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(2223),
                            ModifiedBy = "",
                            Quantity = 1000,
                            StartDate = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(2229),
                            VoucherName = "Summer 24% Discount"
                        },
                        new
                        {
                            Id = new Guid("1cb780e4-366c-4dc2-ba2e-1dd264a9d023"),
                            Code = "SUMMER20000",
                            CreatedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(2231),
                            CreatedBy = "",
                            DiscountValue = 19.00m,
                            EndDate = new DateTime(2025, 4, 10, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(2237),
                            IsActive = true,
                            IsDiscountPercent = false,
                            MaxDiscountValue = 0m,
                            MinOrderCondition = 199m,
                            ModifiedAt = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(2232),
                            ModifiedBy = "",
                            Quantity = 1000,
                            StartDate = new DateTime(2025, 3, 11, 16, 24, 25, 2, DateTimeKind.Local).AddTicks(2236),
                            VoucherName = "Summer 20000VND Discount"
                        });
                });

            modelBuilder.Entity("FStore.Domain.Ordering.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("CouponId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvoiceCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsCounterOrder")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CouponId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("FStore.Domain.Ordering.OrderItem", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProductTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductId", "ProductTypeId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("FStore.Domain.Account.Address", b =>
                {
                    b.HasOne("FStore.Domain.Account.Account", "Account")
                        .WithMany("Addresses")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("FStore.Domain.Basket.CartItem", b =>
                {
                    b.HasOne("FStore.Domain.Basket.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("FStore.Domain.Catalog.Product", b =>
                {
                    b.HasOne("FStore.Domain.Catalog.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FStore.Domain.Catalog.ProductValue", b =>
                {
                    b.HasOne("FStore.Domain.Catalog.ProductAttribute", "ProductAttribute")
                        .WithMany("ProductValues")
                        .HasForeignKey("ProductAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FStore.Domain.Catalog.Product", "Product")
                        .WithMany("ProductValues")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ProductAttribute");
                });

            modelBuilder.Entity("FStore.Domain.Catalog.ProductVariant", b =>
                {
                    b.HasOne("FStore.Domain.Catalog.Product", "Product")
                        .WithMany("ProductVariants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FStore.Domain.Catalog.ProductType", "ProductType")
                        .WithMany("ProductVariants")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("FStore.Domain.Ordering.Order", b =>
                {
                    b.HasOne("FStore.Domain.Ordering.Coupon", "Coupon")
                        .WithMany("Orders")
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Coupon");
                });

            modelBuilder.Entity("FStore.Domain.Ordering.OrderItem", b =>
                {
                    b.HasOne("FStore.Domain.Ordering.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FStore.Domain.Catalog.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FStore.Domain.Catalog.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("FStore.Domain.Account.Account", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("FStore.Domain.Basket.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("FStore.Domain.Catalog.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("FStore.Domain.Catalog.Product", b =>
                {
                    b.Navigation("ProductValues");

                    b.Navigation("ProductVariants");
                });

            modelBuilder.Entity("FStore.Domain.Catalog.ProductAttribute", b =>
                {
                    b.Navigation("ProductValues");
                });

            modelBuilder.Entity("FStore.Domain.Catalog.ProductType", b =>
                {
                    b.Navigation("ProductVariants");
                });

            modelBuilder.Entity("FStore.Domain.Ordering.Coupon", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("FStore.Domain.Ordering.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
